<!DOCTYPE html>
<html>
    <head>
        <title><%= title %></title>
        <link rel='stylesheet' href='/stylesheets/style.css' />
    </head>
  
    <!-- Cell board -->
    <style>
        #life-board table {
            background-color: #2d2d2d;
            border-spacing: 1px;
        }
        #life-board tr, #life-board td {
            background: white;
            padding: 5px 5px;
        }
        #board-container td.alive {
            background-color: black;
        }
        #cell-editor td.alive {
            background-color: dodgerblue;
        }
        #board-container td:hover {
            background-color: dodgerblue;
        }
    </style>
    
    <body>
        <h1>Real-time collaborative Conway's Game of Life</h1>

        <div id='life-board'>
            <table id='board-container'>
                <% for(var x = 0; x < 32; x++) {%>
                    <tr>
                        <% for(var y = 0; y < 32; y++) {%>
                            <td cx='<%= x %>' cy='<%= y %>'></td>
                         <% } %>
                    </tr>
                <% } %>
            </table>
            <br/>
            <table id='cell-editor'>
                <% for(var x = 0; x < 9; x++) {%>
                    <tr>
                        <% for(var y = 0; y < 9; y++) {%>
                            <td cx='<%= x %>' cy='<%= y %>'></td>
                         <% } %>
                    </tr>
                <% } %>
            </table>
        </div>
        
        <button>Recreate</button>
        <button>Clear</button>
        <div id='array-container'></div>
    
        <script src="javascripts/vendor/jquery.js"></script>
        <script src="https://cdn.socket.io/socket.io-1.3.5.js"></script>
        <script>
            //var binaryMode = true; //TBD
            var socket = io.connect('http://localhost:8998'),
                patternSize = 9,
                pattern;

            //Create the drawing pattern array
            function clearPatternArray() {
                pattern = new Array(patternSize);

                for (var i = 0; i < pattern.length; i++) {
                    pattern[i] = new Array(patternSize);
                    for (var k = 0; k < pattern.length; k++) {
                        pattern[i][k] = 0;
                    }
                }
            }
            clearPatternArray();
            
            //Update from server
            socket.on('board update', function (data) {
                $('#array-container').html(JSON.stringify(data));
                for (x = 0; x < data.length; x++) {
                    for (y = 0; y < (data[x]).length; y++) {
                        //console.log(data[x][y]);
                        var item = ($($('#board-container tr')[x]).find('td')[y]);
                        if (data[x][y] >= 1) {
                            //Binary mode TBD
                            //if (binaryMode) {
                            //    item.innerText = '1';
                            //} else {
                                item.setAttribute('class', 'alive');
                            //}
                        } else {
                            //Binary mode TBD
                            //if (binaryMode) {
                            //    item.innerText = '0';
                            //} else {
                                item.removeAttribute('class');
                            //}
                        }
                    }
                }
            });
            
            //Draw on the board
            $('#board-container td').click(function cellClick() {
                var el = $(this);
                var coordinates = {x: el.attr('cx'), y: el.attr('cy'), cells: pattern}
                console.log("board: ", coordinates);
                socket.emit('draw', coordinates);
            });

            //Draw on cell editor
            $('#cell-editor td').click(function cellClick() {
                var el = $(this), x, y;

                $(el).toggleClass('alive');
                clearPatternArray();
                $('#cell-editor td.alive').each(function() {
                    pattern[$(this).attr('cx')][$(this).attr('cy')] = ($(this).hasClass('alive') * 1);
                });

                console.dir(pattern);
            });
        </script>
    </body>
</html>
